#!/usr/bin/env python3
import argparse
from glob import glob
import os
from jinja2 import Template
from datetime import datetime
import json
from pprint import pprint
import sys
import requests
import pandas


def load_json_file(path):
    with open(path) as file:
        return json.load(file)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('nodes_file')
    parser.add_argument('build_dir')
    args = parser.parse_args()

    program_dir = os.path.dirname(os.path.abspath(sys.argv[0]))
    templates_dir = os.path.join(program_dir, 'templates')

    build_dir = os.path.abspath(args.build_dir)

    nodes = []

    df = pandas.read_csv(args.nodes_file)
    for _,line in df.iterrows():
        nodes.append({
            'id':line['node_id'],
            'project_id':line['project_id'],
            'name':line['vsn'],
            'description':line['description'],
            'location':line['address'],
            })

    os.makedirs(build_dir, exist_ok=True)

    today = datetime.now().strftime('%Y-%m-%d')

    index_template = Template(open(os.path.join(templates_dir, 'index.html')).read())
    # node_template = Template(open(os.path.join(templates_dir, 'node.html')).read())

    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    for node in nodes:
        plots = 'http://www.mcs.anl.gov/research/projects/waggle/downloads/vis/tables/{}-table.html'.format(node['id'])
        # plots = './build/tables/{}-table.html'.format(node['id'])

        r = requests.head(plots)

        if r.status_code == 200:
            node['plots'] = plots

    with open(os.path.join(build_dir, 'index.html'), 'w') as f:
        f.write(index_template.render(nodes=nodes, timestamp=timestamp))
